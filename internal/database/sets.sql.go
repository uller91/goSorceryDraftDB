// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: sets.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createSetAndCard = `-- name: CreateSetAndCard :one
INSERT INTO sets (id, created_at, updated_at, name, card_id)
VALUES (
    $1,
    $2,
    $3,
    $4,
    $5
)
RETURNING id, created_at, updated_at, name, card_id
`

type CreateSetAndCardParams struct {
	ID        uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	Name      string
	CardID    uuid.UUID
}

func (q *Queries) CreateSetAndCard(ctx context.Context, arg CreateSetAndCardParams) (Set, error) {
	row := q.db.QueryRowContext(ctx, createSetAndCard,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Name,
		arg.CardID,
	)
	var i Set
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.CardID,
	)
	return i, err
}

const setsReset = `-- name: SetsReset :exec
DELETE FROM sets
`

func (q *Queries) SetsReset(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, setsReset)
	return err
}
